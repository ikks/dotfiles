[editor]
# Show currently open buffers, only when more than one exists.
bufferline = "multiple"

# Highlight all lines with a cursor
cursorline = true

rulers = [90, 140]

[editor.cursor-shape]
insert = "bar"
normal = "block"
select = "underline"

[editor.indent-guides]
character = "╎"
render = true

[editor.statusline]
left = ["mode", "spinner", "version-control", "file-name"]

[keys.select."+"]
# Eliminar los caracteres al final
r = ":pipe sed 's/[ \t]*$//'"
# Wraplines at 90
w = ":pipe fmt -90"
# Translate from English to Spanish locally
e = ":pipe /home/igor/bin/traduce"
# Translate from Spanish to English locally
i = ":pipe /home/igor/bin/tran"
# Switch infinitive to third person
v = ":pipe /home/igor/bin/conjugatercera"
# Show Synonims in spanish, requires Internet
s = ":pipe espasacalvesynonims.sh"
# Leer algo en español
d = ":pipe /home/igor/bin/leeme"

[keys.normal."+"]
# Translate from English to Spanish with Internet
E = ":pipe trans -b en:es"
# Traducir de español a inglés con Internet
I = ":pipe trans -b es:en"
# Translate from English to Spanish locally
e = ":pipe /home/igor/bin/traduce"
# Traducir de español a inglés localmente
i = ":pipe /home/igor/bin/tran"
# Switch infinitive to third person
v = ":pipe /home/igor/bin/conjugatercera"
# Show Synonims in spanish, requires Internet
s = ":pipe espasacalvesynonims.sh"
# Eliminar los caracteres al final
r = ":pipe sed 's/[ \t]*$//'"
# Wraplines a 90
w = ":pipe fmt -90"
# Insert from the clipboard
"+" = ":insert-output cliphist list | wofi --dmenu | cliphist decode"
# Build zig
z = ":run-shell-command zigbuilder"
# Build test
t = ":run-shell-command zigbuildertest"
# Lazygit
g = ":run-shell-command helixlazygitkitten"
# clear screens
c = ":run-shell-command clearothers"

# latam keyboard, less shifting
[keys.normal."{"]
d = "goto_prev_diag"
D = "goto_first_diag"
g = "goto_prev_change"
G = "goto_first_change"
f = "goto_prev_function"
t = "goto_prev_class"
a = "goto_prev_parameter"
c = "goto_prev_comment"
e = "goto_prev_entry"
T = "goto_prev_test"
p = "goto_prev_paragraph"
"space" = "add_newline_above"

[keys.normal."}"]
d = "goto_next_diag"
D = "goto_last_diag"
g = "goto_next_change"
G = "goto_last_change"
f = "goto_next_function"
t = "goto_next_class"
a = "goto_next_parameter"
c = "goto_next_comment"
e = "goto_next_entry"
T = "goto_next_test"
p = "goto_next_paragraph"
"space" = "add_newline_below"

[keys.normal.space]

x = ":toggle whitespace.render all none"

[keys.normal]
A-x = "extend_to_line_bounds"
X = ["extend_line_up", "extend_to_line_bounds"]
C-g = [
    ":write-all",
    ":new",
    ":insert-output lazygit",
    ":buffer-close!",
    ":redraw",
    ":reload-all"
]

[keys.select]
A-x = "extend_to_line_bounds"
X = ["extend_line_up", "extend_to_line_bounds"]
